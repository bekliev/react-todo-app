{"version":3,"sources":["base/config.js","base/utils.js","components/GlobalStyle.js","components/TodoApp/state/context.js","components/TodoApp/state/actions.js","components/Box.js","components/Title.js","components/Spacer.js","components/Icon.jsx","components/Button.js","components/TodoApp/AddTodoForm.jsx","components/TodoApp/TodoList.jsx","components/TodoApp/TodoApp.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["colors","base","hover","active","getSize","size","concat","GlobalStyle","createGlobalStyle","_templateObject","baseSize","_ref","p","gs","React","memo","TodoAppContext","createContext","initialState","data","reducer","todos","action","type","Object","toConsumableArray","id","Date","task","name","done","index","findIndex","slice","_ref2","newTodos","TodoAppContextProvider","props","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","children","styles","borderRadius","padding","join","maxWidth","Box","styled","div","Box_templateObject","Title","h1","Title_templateObject","fs","mt","_ref3","mb","Spacer","hr","Spacer_templateObject","_ref$size","_ref$color","color","xmlns","width","height","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Button","button","Button_templateObject","radius","block","undefined","filter","Boolean","defaultProps","Form","form","AddTodoForm_templateObject","Input","input","_templateObject2","useContext","handleSubmit","useCallback","event","preventDefault","field","currentTarget","elements","taskName","onSubmit","placeholder","required","minLength","maxLength","components_Button","components_Icon","TodoList","_React$useContext","handleClick","el","parentElement","getAttribute","Number","toggleTodo","deleteTodo","window","confirm","handleDownload","exportObj","arguments","length","exportName","dataStr","encodeURIComponent","JSON","stringify","elAnchor","document","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","map","Todo","key","data-id","TodoTitle","className","onClick","style","Fragment","Todos","_ref4","components_Spacer","ol","TodoList_templateObject","li","TodoList_templateObject2","_templateObject3","TodoApp","components_Box","components_Title","TodoApp_AddTodoForm","TodoApp_TodoList","App","components_GlobalStyle","TodoApp_TodoApp","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69835031.chunk.js","sourcesContent":["export const baseSize = 32;\r\n\r\nexport const colors = {\r\n  red: {\r\n    base: '#EE0E44',\r\n    hover: '#FF3767',\r\n    active: '#DA0034'\r\n  },\r\n  blue: {\r\n    base: '#0066FF',\r\n    hover: '#4E95FF',\r\n    active: '#005AE1'\r\n  },\r\n  white: {\r\n    base: '#fff',\r\n    hover: '#ddd',\r\n    active: '#ccc',\r\n  },\r\n  green: {\r\n    base: '#8bc34a',\r\n    hover: '#9ccc65',\r\n    active: '#aed581',\r\n  }\r\n}","import { baseSize } from './config';\r\n\r\nexport const getSize = size => `${size / baseSize}rem`;\r\n\r\nexport const downloadObjectAsJson = (exportObj = {}, exportName = 'data') => {\r\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj, null, 2));\r\n  var elAnchor = document.createElement('a');\r\n  elAnchor.setAttribute(\"href\", dataStr);\r\n  elAnchor.setAttribute(\"download\", exportName + \".json\");\r\n  document.body.appendChild(elAnchor); // required for firefox\r\n  elAnchor.click();\r\n  elAnchor.remove();\r\n}","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nimport { baseSize } from '../base/config';\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size: ${baseSize / 2}px;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: ${baseSize}px;\r\n    }\r\n  }\r\n\r\n  body {\r\n    background-color: #E5E5E5;\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 1024' fill='none'%3E%3Cpath fill='%23FF3767' d='M1598-212C1289 820 77 107-157 891l123 457 1913-512-281-1048z'/%3E%3Cpath fill='%234E95FF' d='M1625 554C1116 982 229 514-157 839v221h1782V554z'/%3E%3C/svg%3E\");\r\n    background-size: cover;\r\n    min-height: 100vh;\r\n\r\n    ${({p}) => `padding: ${gs(p)}`}\r\n  }\r\n`;\r\n\r\nexport default React.memo(GlobalStyle);","import React from 'react';\r\n\r\nimport data from './data.json';\r\nimport * as ACTIONS from './actions';\r\n\r\nconst TodoAppContext = React.createContext();\r\n\r\nconst initialState = data;\r\n\r\nconst reducer = (todos, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.NEW:\r\n      return [\r\n        ...todos,\r\n        {\r\n          id: +(new Date()),\r\n          task: action.name,\r\n          done: false,\r\n        }\r\n      ];\r\n\r\n    case ACTIONS.DELETE: {\r\n      const index = todos.findIndex(({ id }) => id === action.id);\r\n      return [\r\n        ...todos.slice(0, index),\r\n        ...todos.slice(index + 1)\r\n      ];\r\n    }\r\n\r\n    case ACTIONS.TOGGLE: {\r\n      const index = todos.findIndex(({ id }) => id === action.id);\r\n      const newTodos = [...todos];\r\n      newTodos[index].done = !(newTodos[index].done);\r\n      return newTodos;\r\n    }\r\n\r\n    case ACTIONS.DELETE_ALL:\r\n      return [];\r\n\r\n    case ACTIONS.RESET:\r\n      return initialState;\r\n\r\n    default:\r\n  }\r\n};\r\n\r\nfunction TodoAppContextProvider(props) {\r\n  let [todos, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <TodoAppContext.Provider\r\n      value={{\r\n        todos,\r\n        dispatch\r\n      }}>\r\n\r\n      {props.children}\r\n\r\n    </TodoAppContext.Provider >\r\n  );\r\n}\r\n\r\nexport { TodoAppContext, TodoAppContextProvider };\r\n\r\n","export const NEW = 'NEW';\r\nexport const DELETE = 'DELETE';\r\nexport const DELETE_ALL = 'DELETE_all';\r\nexport const TOGGLE = 'TOGGLE';\r\nexport const RESET = 'RESET';\r\n\r\nexport const newTodo = name => ({\r\n  type: NEW,\r\n  name,\r\n});\r\n\r\nexport const deleteTodo = id => ({\r\n  type: DELETE,\r\n  id: Number(id),\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n  type: TOGGLE,\r\n  id: Number(id),\r\n});\r\n\r\nexport const resetTodos = () => ({\r\n  type: RESET\r\n});\r\n\r\nexport const deleteAllTodos = () => ({\r\n  type: DELETE_ALL\r\n});","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst styles = {\r\n  borderRadius: gs(28),\r\n  padding: [gs(72), gs(62)].join(' '),\r\n  maxWidth: gs(870),\r\n};\r\n\r\nconst Box = styled.div`\r\n  background: #FFFFFF;\r\n  box-shadow: 0px ${gs(8)} ${gs(16)} rgba(0, 0, 0, 0.25);\r\n  border-radius: ${styles.borderRadius};\r\n  padding: ${styles.padding};\r\n  max-width: ${styles.maxWidth};\r\n`;\r\n\r\nexport default React.memo(Box);","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst Title = styled.h1`\r\n  ${({ fs }) => `font-size: ${gs(fs)}`}\r\n  ${({ mt }) => `margin-top: ${gs(mt)}`}\r\n  ${({ mb }) => `margin-bottom: ${gs(mb)}`}\r\n`;\r\n\r\nexport default React.memo(Title);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst Spacer = styled.hr`\r\n  border: 0;\r\n  background: none;\r\n  margin: 0;\r\n  padding-bottom: ${({ size }) => gs(size)};\r\n`;\r\n\r\nexport default React.memo(Spacer);","import React from 'react';\r\n\r\nexport default React.memo(function Icon({ name, size = '2rem', color = 'white' }) {\r\n  switch (name) {\r\n    case 'plus':\r\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 45 45\">\r\n        <path fill={color} fillRule=\"evenodd\" d=\"M25.4 7h-5.8v12.6H7v5.8h12.6V38h5.8V25.4H38v-5.8H25.4V7z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n\r\n    case 'trash-can':\r\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 35 35\">\r\n        <path fill={color} d=\"M5.8 31.1c0 2.1 1.8 3.9 4 3.9h15.5c2.1 0 3.9-1.8 3.9-3.9V7.8H5.8V31zM31.1 2h-6.8l-2-1.9h-9.7l-2 2H4v3.8H31V2z\" />\r\n      </svg>\r\n\r\n    case 'download':\r\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3\"/>\r\n    </svg>\r\n\r\n    default:\r\n      return <p>Unknown icon name: <mark>{name}</mark></p>\r\n  };\r\n});","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { colors } from '../base/config';\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst Button = styled.button`\r\n  border: 0;\r\n  border-radius: ${({ radius }) => radius};\r\n\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  user-select: none;\r\n\r\n  padding: ${gs(22)} ${gs(30)};\r\n  min-width: ${gs(200)};\r\n\r\n  > * {\r\n    margin: 0 ${gs(10)}\r\n  }\r\n\r\n  ${({ block }) => block && `\r\n    display: flex;\r\n    width: 100%;\r\n  `}\r\n\r\n  ${({ color }) => [\r\n    color === 'red' && `\r\n      background-color: ${colors.red.base};\r\n      color: white;\r\n      &:hover, &:focus { background-color: ${colors.red.hover} }\r\n      &.active, &:active { background-color: ${colors.red.active} }\r\n    `,\r\n    color === 'blue' && `\r\n      background-color: ${colors.blue.base};\r\n      color: white;\r\n      &:hover, &:focus { background-color: ${colors.blue.hover} }\r\n      &.active, &:active { background-color: ${colors.blue.active} }\r\n    `,\r\n    color === 'green' && `\r\n      background-color: ${colors.green.base};\r\n      color: white;\r\n      &:hover, &:focus { background-color: ${colors.green.hover} }\r\n      &.active, &:active { background-color: ${colors.green.active} }\r\n    `,\r\n    color === undefined && `\r\n      background-color: ${colors.white.base};\r\n      &:hover, &:focus { background-color: ${colors.white.hover} }\r\n      &.active, &:active { background-color: ${colors.white.active} }\r\n    `,\r\n  ].filter(Boolean).join('')}\r\n`;\r\n\r\nButton.defaultProps = {\r\n  // color: 'red',\r\n  radius: '4px'\r\n}\r\n\r\nexport default React.memo(Button);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getSize as gs } from '../../base/utils';\r\n\r\nimport { newTodo } from './state/actions';\r\nimport { TodoAppContext } from './state/context';\r\n\r\nimport Icon from '../Icon';\r\nimport Button from '../Button';\r\n\r\nconst AddTodoForm = () => {\r\n  const { dispatch } = React.useContext(TodoAppContext);\r\n\r\n  const handleSubmit = React.useCallback(event => {\r\n    // Prevent the default browser's action\r\n    event.preventDefault();\r\n\r\n    // Retrieve required things\r\n    const field = event.currentTarget.elements['task-name'];\r\n    const taskName = field.value;\r\n\r\n    // Update the state\r\n    dispatch(newTodo(taskName));\r\n\r\n    // Reset value\r\n    field.value = '';\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Task name\" name=\"task-name\" required minLength=\"3\" maxLength=\"200\" />\r\n\r\n      <Button color=\"red\" type=\"submit\" radius=\"0 8px 8px 0\">\r\n        <Icon name=\"plus\" />\r\n      </Button>\r\n    </Form>\r\n  )\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-right: 0;\r\n  border-radius: 8px 0 0 8px;\r\n  font-weight: bold;\r\n  padding: ${gs(22)} ${gs(24)};\r\n  width: 100%;\r\n\r\n  &:focus { border-color: rgba(0, 0, 0, 0.6) }\r\n`;\r\n\r\nexport default React.memo(AddTodoForm);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getSize as gs, downloadObjectAsJson } from '../../base/utils';\r\n\r\nimport { TodoAppContext } from './state/context';\r\nimport { deleteTodo, deleteAllTodos, toggleTodo } from './state/actions';\r\n\r\nimport Icon from '../Icon';\r\nimport Button from '../Button';\r\nimport Spacer from '../Spacer';\r\n\r\nconst TodoList = React.memo(() => {\r\n  const { todos, dispatch } = React.useContext(TodoAppContext);\r\n\r\n  // console.log({ todos });\r\n\r\n  const handleClick = React.useCallback(({ currentTarget: el }) => {\r\n    // Retrieve required thing\r\n    const id = el.parentElement.getAttribute('data-id');\r\n\r\n    switch (el.name) {\r\n      case 'toggle': return dispatch(toggleTodo(id));\r\n      case 'delete': return dispatch(deleteTodo(id));\r\n      case 'deleteAll': return window.confirm('Are you sure?') && dispatch(deleteAllTodos());\r\n      default:\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleDownload = React.useCallback(() => downloadObjectAsJson(todos), [todos]);\r\n\r\n  const map = ({ task, id, done }) => (\r\n    <Todo key={id || task} data-id={id}>\r\n      <TodoTitle className={done ? 'done' : ''} onClick={handleClick} name=\"toggle\">\r\n        {task}\r\n      </TodoTitle>\r\n      <Button color=\"blue\" onClick={handleClick} name=\"delete\">\r\n        <Icon name=\"trash-can\" />\r\n      </Button>\r\n    </Todo>\r\n  )\r\n\r\n  return todos.length === 0\r\n    ? <p style={{ color: '#da0606' }}>No todos to show.<br />Add a new one!</p>\r\n    : (\r\n      <>\r\n        <Todos>\r\n          {todos.filter(({ done }) => !done).map(map)}\r\n        </Todos>\r\n\r\n        <h2>Done</h2>\r\n        <Todos>\r\n          {todos.filter(({ done }) => done).map(map)}\r\n        </Todos>\r\n\r\n        <Spacer size={40} />\r\n\r\n        <Button onClick={handleClick} name=\"deleteAll\" color=\"blue\" block>\r\n          <Icon name=\"trash-can\" /> Delete All\r\n        </Button>\r\n\r\n        <Spacer size={50} />\r\n\r\n        <Button onClick={handleDownload} name=\"download\" color=\"green\" block>\r\n          <Icon name=\"download\" /> data.json\r\n        </Button>\r\n      </>\r\n    )\r\n});\r\n\r\nconst Todos = styled.ol`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst Todo = styled.li`\r\n  display: flex;\r\n  margin-bottom: ${gs(24)};\r\n`;\r\n\r\nconst TodoTitle = styled(Button)`\r\n  flex-grow: 1;\r\n  font-weight: bold;\r\n\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  text-align: left;\r\n\r\n  word-break: break-word;\r\n\r\n  > * {\r\n    margin: 0;\r\n  }\r\n\r\n  &.done {\r\n    text-decoration: line-through;\r\n    color: #bf002e;\r\n  }\r\n`;\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport { TodoAppContextProvider } from './state/context';\r\n\r\nimport Box from '../Box';\r\nimport Title from '../Title';\r\nimport Spacer from '../Spacer';\r\nimport AddTodoForm from './AddTodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst TodoApp = React.memo(() => (\r\n  <Box>\r\n    <Title fs={64} mt={0} mb={0}>Todo List</Title>\r\n\r\n    <Spacer size={50} />\r\n\r\n    <TodoAppContextProvider>\r\n      <AddTodoForm />\r\n\r\n      <Spacer size={40} />\r\n\r\n      <TodoList />\r\n    </TodoAppContextProvider>\r\n  </Box>\r\n));\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\n\nimport GlobalStyle from './components/GlobalStyle';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle p={50} />\n\n      <TodoApp />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}