{"version":3,"sources":["base/config.js","base/utils.js","components/GlobalStyle.js","components/TodoApp/state/context.js","components/TodoApp/state/actions.js","components/Box.js","components/Title.js","components/Icon.jsx","components/Button.js","components/TodoApp/AddTodoForm.jsx","components/TodoApp/TodoList.jsx","components/TodoApp/TodoApp.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["colors","base","hover","active","getSize","size","concat","GlobalStyle","createGlobalStyle","_templateObject","baseSize","_ref","p","gs","React","memo","TodoAppContext","createContext","initialState","data","reducer","todos","action","type","Object","toConsumableArray","task","name","done","slice","index","newTodos","TodoAppContextProvider","props","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","children","styles","borderRadius","padding","join","maxWidth","Box","styled","div","Box_templateObject","Title","h1","Title_templateObject","fs","_ref2","mt","_ref3","mb","_ref$size","_ref$color","color","xmlns","width","height","viewBox","fill","fillRule","d","clipRule","Button","button","Button_templateObject","radius","filter","Boolean","defaultProps","Form","form","AddTodoForm_templateObject","Input","input","_templateObject2","useContext","handleSubmit","useCallback","e","preventDefault","field","currentTarget","elements","taskName","onSubmit","placeholder","components_Button","components_Icon","TodoList","_React$useContext","console","log","handleClick","getAttribute","Number","deleteTodo","length","style","Todos","map","Todo","key","TodoTitle","String","onClick","data-index","ol","TodoList_templateObject","li","TodoList_templateObject2","_templateObject3","TodoApp","components_Box","components_Title","Spacer","TodoApp_AddTodoForm","TodoApp_TodoList","hr","TodoApp_templateObject","App","Fragment","components_GlobalStyle","TodoApp_TodoApp","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc699620.chunk.js","sourcesContent":["export const baseSize = 32;\r\n\r\nexport const colors = {\r\n  red: {\r\n    base: '#EE0E44',\r\n    hover: '#FF3767',\r\n    active: '#DA0034'\r\n  },\r\n  blue: {\r\n    base: '#0066FF',\r\n    hover: '#4E95FF',\r\n    active: '#005AE1'\r\n  }\r\n}","import { baseSize } from './config';\r\n\r\nexport const getSize = size => `${size / baseSize}rem`;\r\n","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nimport { baseSize } from '../base/config';\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size: ${baseSize / 2}px;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: ${baseSize}px;\r\n    }\r\n  }\r\n\r\n  body {\r\n    background-color: #E5E5E5;\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 1024' fill='none'%3E%3Cpath fill='%23FF3767' d='M1598-212C1289 820 77 107-157 891l123 457 1913-512-281-1048z'/%3E%3Cpath fill='%234E95FF' d='M1625 554C1116 982 229 514-157 839v221h1782V554z'/%3E%3C/svg%3E\");\r\n    background-size: cover;\r\n    min-height: 100vh;\r\n\r\n    ${({p}) => `padding: ${gs(p)}`}\r\n  }\r\n`;\r\n\r\nexport default React.memo(GlobalStyle);","import React from 'react';\r\n\r\nimport data from './data.json';\r\nimport * as ACTIONS from './actions';\r\n\r\nconst TodoAppContext = React.createContext();\r\n\r\nconst initialState = data;\r\n\r\nconst reducer = (todos, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.NEW:\r\n      return [\r\n        ...todos,\r\n        {\r\n          task: action.name,\r\n          done: false,\r\n        }\r\n      ];\r\n\r\n    case ACTIONS.DELETE:\r\n      return [\r\n        ...todos.slice(0, action.index),\r\n        ...todos.slice(action.index + 1)\r\n      ];\r\n\r\n    case ACTIONS.TOGGLE:\r\n      const newTodos = [...todos];\r\n      newTodos[action.index].done = !(newTodos[action.index].done);\r\n      return newTodos;\r\n\r\n    case ACTIONS.RESET:\r\n      return initialState;\r\n\r\n    default:\r\n  }\r\n};\r\n\r\nfunction TodoAppContextProvider(props) {\r\n  let [todos, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <TodoAppContext.Provider\r\n      value={{\r\n        todos,\r\n        dispatch\r\n      }}>\r\n\r\n      {props.children}\r\n\r\n    </TodoAppContext.Provider >\r\n  );\r\n}\r\n\r\nexport { TodoAppContext, TodoAppContextProvider };\r\n\r\n","export const NEW = 'NEW';\r\nexport const DELETE = 'DELETE';\r\nexport const TOGGLE = 'TOGGLE';\r\nexport const RESET = 'RESET';\r\n\r\nexport const newTodo = name => ({\r\n  type: NEW,\r\n  name,\r\n});\r\n\r\nexport const deleteTodo = index => ({\r\n  type: DELETE,\r\n  index: Number(index),\r\n});\r\n\r\nexport const toggleTodo = index => ({\r\n  type: TOGGLE,\r\n  index: Number(index),\r\n});\r\n\r\nexport const resetTodos = () => ({\r\n  type: RESET\r\n})","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst styles = {\r\n  borderRadius: gs(28),\r\n  padding: [gs(72), gs(62), gs(166)].join(' '),\r\n  maxWidth: gs(870),\r\n};\r\n\r\nconst Box = styled.div`\r\n  background: #FFFFFF;\r\n  box-shadow: 0px ${gs(8)} ${gs(16)} rgba(0, 0, 0, 0.25);\r\n  border-radius: ${styles.borderRadius};\r\n  padding: ${styles.padding};\r\n  max-width: ${styles.maxWidth};\r\n`;\r\n\r\nexport default React.memo(Box);","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst Title = styled.h1`\r\n  ${({ fs }) => `font-size: ${gs(fs)}`}\r\n  ${({ mt }) => `margin-top: ${gs(mt)}`}\r\n  ${({ mb }) => `margin-bottom: ${gs(mb)}`}\r\n`;\r\n\r\nexport default React.memo(Title);","import React from 'react';\r\n\r\nexport default React.memo(function Icon({ name, size = '2rem', color = 'white' }) {\r\n  switch (name) {\r\n    case 'plus':\r\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 45 45\">\r\n        <path fill={color} fillRule=\"evenodd\" d=\"M25.4 7h-5.8v12.6H7v5.8h12.6V38h5.8V25.4H38v-5.8H25.4V7z\" clipRule=\"evenodd\" />\r\n      </svg>\r\n\r\n    case 'trash-can':\r\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 35 35\">\r\n        <path fill={color} d=\"M5.8 31.1c0 2.1 1.8 3.9 4 3.9h15.5c2.1 0 3.9-1.8 3.9-3.9V7.8H5.8V31zM31.1 2h-6.8l-2-1.9h-9.7l-2 2H4v3.8H31V2z\" />\r\n      </svg>\r\n\r\n    default:\r\n      return <p>Unknown icon name: <mark>{name}</mark></p>\r\n  };\r\n});","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { colors } from '../base/config';\r\nimport { getSize as gs } from '../base/utils';\r\n\r\nconst Button = styled.button`\r\n  border: 0;\r\n  border-radius: ${({radius}) => radius};\r\n  cursor: pointer;\r\n  padding: ${gs(22)} ${gs(62)};\r\n\r\n  ${({ color }) => [\r\n    color === 'red' && `\r\n      background-color: ${colors.red.base};\r\n      &:hover, &:focus { background-color: ${colors.red.hover} }\r\n      &.active, &:active { background-color: ${colors.red.active} }\r\n    `,\r\n    color === 'blue' && `\r\n      background-color: ${colors.blue.base};\r\n      &:hover, &:focus { background-color: ${colors.blue.hover} }\r\n      &.active, &:active { background-color: ${colors.blue.active} }\r\n    `,\r\n  ].filter(Boolean).join('')}\r\n`;\r\n\r\nButton.defaultProps = {\r\n  color: 'red',\r\n  radius: '4px'\r\n}\r\n\r\nexport default React.memo(Button);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getSize as gs } from '../../base/utils';\r\n\r\nimport { newTodo } from './state/actions';\r\nimport { TodoAppContext } from './state/context';\r\n\r\nimport Icon from '../Icon';\r\nimport Button from '../Button';\r\n\r\nconst AddTodoForm = () => {\r\n  const { dispatch } = React.useContext(TodoAppContext);\r\n\r\n  const handleSubmit = React.useCallback(e => {\r\n    // Prevent the default browser's action\r\n    e.preventDefault();\r\n\r\n    // Retrieve required things\r\n    const field = e.currentTarget.elements['task-name'];\r\n    const taskName = field.value;\r\n\r\n    // Update the state\r\n    dispatch(newTodo(taskName));\r\n\r\n    // Reset value\r\n    field.value = '';\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Task name\" name=\"task-name\" />\r\n\r\n      <Button type=\"submit\" radius=\"0 8px 8px 0\">\r\n        <Icon name=\"plus\" />\r\n      </Button>\r\n    </Form>\r\n  )\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-right: 0;\r\n  border-radius: 8px 0 0 8px;\r\n  font-weight: bold;\r\n  padding: ${gs(22)} ${gs(24)};\r\n  width: 100%;\r\n\r\n  &:focus { border-color: rgba(0, 0, 0, 0.6) }\r\n`;\r\n\r\nexport default React.memo(AddTodoForm);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getSize as gs } from '../../base/utils';\r\n\r\nimport { TodoAppContext } from './state/context';\r\nimport { deleteTodo } from './state/actions';\r\n\r\nimport Icon from '../Icon';\r\nimport Button from '../Button';\r\n\r\nconst TodoList = React.memo(() => {\r\n  const { todos, dispatch } = React.useContext(TodoAppContext);\r\n\r\n  console.log({ todos });\r\n\r\n  const handleClick = React.useCallback(e => {\r\n    // Prevent the default browser's action\r\n    e.preventDefault();\r\n\r\n    // Retrieve required thing\r\n    const index = e.currentTarget.getAttribute('data-index');\r\n\r\n    // Update the state\r\n    dispatch(deleteTodo(index));\r\n  }, [dispatch]);\r\n\r\n  return todos.length === 0\r\n    ? <p style={{ color: 'red' }}>No todos to show.<br />Add a new one!</p>\r\n    : (\r\n      <Todos>\r\n        {todos.map(({ task, done }, index) => (\r\n          <Todo key={task}>\r\n            <TodoTitle>{task}<div>done: {String(done)}</div></TodoTitle>\r\n            <Button color=\"blue\" onClick={handleClick} data-index={index}>\r\n              <Icon name=\"trash-can\" />\r\n            </Button>\r\n          </Todo>\r\n        ))}\r\n      </Todos>\r\n    )\r\n});\r\n\r\nconst Todos = styled.ol`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst Todo = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${gs(24)};\r\n`;\r\n\r\nconst TodoTitle = styled.div`\r\n  flex-grow: 1;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getSize as gs } from '../../base/utils';\r\n\r\nimport { TodoAppContextProvider } from './state/context';\r\n\r\nimport Box from '../Box';\r\nimport Title from '../Title';\r\nimport AddTodoForm from './AddTodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst TodoApp = React.memo(() => (\r\n  <Box>\r\n    <Title fs={64} mt={0} mb={0}>Todo List</Title>\r\n\r\n    <Spacer size={50} />\r\n\r\n    <TodoAppContextProvider>\r\n      <AddTodoForm />\r\n\r\n      <Spacer size={40} />\r\n\r\n      <TodoList />\r\n    </TodoAppContextProvider>\r\n  </Box>\r\n));\r\n\r\nconst Spacer = styled.hr`\r\n  border: 0;\r\n  background: none;\r\n  margin: 0;\r\n  padding-bottom: ${({ size }) => gs(size)};\r\n`;\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\n\nimport GlobalStyle from './components/GlobalStyle';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle p={50} />\n\n      <TodoApp />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}